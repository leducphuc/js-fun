{"version":3,"sources":["ex1-fixed.js"],"names":["fakeAjax","url","cb","fake_responses","randomDelay","Math","round","random","console","log","setTimeout","output","text","getFile","file","fileReceived","responses","files","i","length","Date","now","start"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,CAAkBC,GAAlB,EAAsBC,EAAtB,EAA0B;AACzB,MAAIC,cAAc,GAAG;AACpB,aAAS,gBADW;AAEpB,aAAS,iBAFW;AAGpB,aAAS;AAHW,GAArB;AAKA,MAAIC,WAAW,GAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,IAAnC,GAA2C,IAA7D;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBR,GAA7B;AAEAS,EAAAA,UAAU,CAAC,YAAU;AACpBR,IAAAA,EAAE,CAACC,cAAc,CAACF,GAAD,CAAf,CAAF;AACA,GAFS,EAERG,WAFQ,CAAV;AAGA;;AAED,SAASO,MAAT,CAAgBC,IAAhB,EAAsB;AACrBJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,EAED;AACA;;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACtBd,EAAAA,QAAQ,CAACc,IAAD,EAAM,UAASF,IAAT,EAAc;AAC3BG,IAAAA,YAAY,CAACD,IAAD,EAAMF,IAAN,CAAZ;AACA,GAFO,CAAR;AAGA;;AAED,SAASG,YAAT,CAAsBD,IAAtB,EAA2BF,IAA3B,EAAiC;AAChC;AACA,MAAI,CAACI,SAAS,CAACF,IAAD,CAAd,EAAsB;AACrBE,IAAAA,SAAS,CAACF,IAAD,CAAT,GAAkBF,IAAlB;AACA;;AAED,MAAIK,KAAK,GAAG,CAAC,OAAD,EAAS,OAAT,EAAiB,OAAjB,CAAZ,CANgC,CAQhC;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,KAAK,CAACE,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAClC;AACA,QAAID,KAAK,CAACC,CAAD,CAAL,IAAYF,SAAhB,EAA2B;AAC1B;AACA,UAAIA,SAAS,CAACC,KAAK,CAACC,CAAD,CAAN,CAAT,KAAwB,IAA5B,EAAkC;AACjCP,QAAAA,MAAM,CAACK,SAAS,CAACC,KAAK,CAACC,CAAD,CAAN,CAAV,CAAN;AACAF,QAAAA,SAAS,CAACC,KAAK,CAACC,CAAD,CAAN,CAAT,GAAsB,IAAtB;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYW,IAAI,CAACC,GAAL,KAAaC,KAAzB;AACA;AACD,KAPD,CAQA;AARA,SASK;AACJ;AACA,eAAO,KAAP;AACA;AACD;;AAEDX,EAAAA,MAAM,CAAC,WAAD,CAAN;AACA,EAED;;;AACA,IAAIK,SAAS,GAAG,EAAhB,EAEA;;AACA,IAAMM,KAAK,GAAGF,IAAI,CAACC,GAAL,EAAd;AACAR,OAAO,CAAC,OAAD,CAAP;AACAA,OAAO,CAAC,OAAD,CAAP;AACAA,OAAO,CAAC,OAAD,CAAP","file":"ex1-fixed.a60eb888.map","sourceRoot":"..","sourcesContent":["function fakeAjax(url,cb) {\n\tvar fake_responses = {\n\t\t\"file1\": \"The first text\",\n\t\t\"file2\": \"The middle text\",\n\t\t\"file3\": \"The last text\"\n\t};\n\tvar randomDelay = (Math.round(Math.random() * 1E4) % 8000) + 1000;\n\n\tconsole.log(\"Requesting: \" + url);\n\n\tsetTimeout(function(){\n\t\tcb(fake_responses[url]);\n\t},randomDelay);\n}\n\nfunction output(text) {\n\tconsole.log(text);\n}\n\n// **************************************\n// The old-n-busted callback way\n\nfunction getFile(file) {\n\tfakeAjax(file,function(text){\n\t\tfileReceived(file,text);\n\t});\n}\n\nfunction fileReceived(file,text) {\n\t// haven't received this text yet?\n\tif (!responses[file]) {\n\t\tresponses[file] = text;\n\t}\n\n\tvar files = [\"file1\",\"file2\",\"file3\"];\n\n\t// loop through responses in order for rendering\n\tfor (var i=0; i<files.length; i++) {\n\t\t// response received?\n\t\tif (files[i] in responses) {\n\t\t\t// response needs to be rendered?\n\t\t\tif (responses[files[i]] !== true) {\n\t\t\t\toutput(responses[files[i]]);\n\t\t\t\tresponses[files[i]] = true;\n\t\t\t\tconsole.log(Date.now() - start);\n\t\t\t}\n\t\t}\n\t\t// can't render yet\n\t\telse {\n\t\t\t// not complete!\n\t\t\treturn false;\n\t\t}\n\t}\n\n\toutput(\"Complete!\");\n}\n\n// hold responses in whatever order they come back\nvar responses = {};\n\n// request all files at once in \"parallel\"\nconst start = Date.now();\ngetFile(\"file1\");\ngetFile(\"file2\");\ngetFile(\"file3\");\n"]}